{"version":3,"sources":["../src/constants.ts","../src/index.ts","../src/struct.ts"],"sourcesContent":["export default {\n  languageCode: {\n    en: {\n      lang: \"en\",\n      name: \"English\",\n    },\n    de: {\n      lang: \"de\",\n      name: \"Deutsch\",\n    },\n    es: {\n      lang: \"es\",\n      name: \"Español\",\n    },\n    fr: {\n      lang: \"fr\",\n      name: \"Français\",\n    },\n    hi: {\n      lang: \"hi\",\n      name: \"हिन्दी / Hindī\",\n    },\n    id: {\n      lang: \"id\",\n      name: \"Indonesian\",\n    },\n    it: {\n      lang: \"it\",\n      name: \"Italiano\",\n    },\n    jp: {\n      lang: \"jp\",\n      name: \"日本語\",\n    },\n    kr: {\n      lang: \"kr\",\n      name: \"한국어\",\n    },\n    mm: {\n      lang: \"mm\",\n      name: \"Myanmar (မြန်မာ)\",\n    },\n    my: {\n      lang: \"my\",\n      name: \"Malay\",\n    },\n    ph: {\n      lang: \"ph\",\n      name: \"Filipino\",\n    },\n    pt: {\n      lang: \"pt\",\n      name: \"Português\",\n    },\n    ru: {\n      lang: \"ru\",\n      name: \"Русский\",\n    },\n    th: {\n      lang: \"th\",\n      name: \"ไทย\",\n    },\n    tr: {\n      lang: \"tr\",\n      name: \"Türkçe\",\n    },\n    vi: {\n      lang: \"vi\",\n      name: \"Tiếng Việt\",\n    },\n    \"zh-cn\": {\n      lang: \"zh-cn\",\n      name: \"简体中文\",\n    },\n    \"zh-tw\": {\n      lang: \"zh-tw\",\n      name: \"繁體中文\",\n    },\n    sa: {\n      lang: \"sa\",\n      name: \"العربية\",\n    },\n    bn: {\n      lang: \"bn\",\n      name: \"বাঙালি\",\n    },\n  },\n  userAgent:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\",\n  regex:\n    /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/u,\n};\n","import constants from \"./constants.js\";\nimport fetch from \"node-fetch\";\nimport {\n  Y2MateVideoDetail,\n  Y2MateSearchResult,\n  Y2MateDownload,\n  Y2MateVideoDetailRaw,\n  Y2MateVideoSearchResultRaw,\n  Y2MateVideoDownloadRaw,\n  Y2MatePlaylist,\n  Y2MatePlaylistRaw,\n} from \"./struct.js\";\n\nclass Y2MateClient {\n  private userAgent: string;\n  public constructor(userAgent: any = constants.userAgent) {\n    /**\n     * User agent\n     * @type {string}\n     */\n    this.userAgent = typeof userAgent === \"string\" ? userAgent : constants.userAgent;\n  }\n  getFromURL(url: string, languageCode: string = \"en\"): Promise<Y2MateVideoDetail|Y2MatePlaylist> {\n    if (typeof url !== \"string\") throw new Error(\"URL is required\");\n    if (!constants.regex.test(url)) throw new Error(\"Invalid URL \" + url);\n    return this._info(url, languageCode);\n  }\n  searchVideo(keyword: string, languageCode: string = \"en\"): Promise<Y2MateSearchResult> {\n    if (typeof keyword !== \"string\") throw new Error(\"Keyword is required\");\n    if (constants.regex.test(keyword)) throw new Error(\"Invalid keyword (URL is not allowed)\");\n    return this._info(keyword, languageCode);\n  }\n  /**\n   * Fetch information of a video\n   * @param {string} keyword\n   * @param {string} languageCode\n   * @returns {Promise<Y2MateSearchResult|Y2MateVideoDetail|Y2MatePlaylist>}\n   */\n  private _info(keyword: string, languageCode: string = \"en\"): Promise<any> {\n    if (typeof keyword !== \"string\") throw new Error(\"Keyword is required\");\n    if (typeof languageCode !== \"string\") throw new Error(\"Language code is required\");\n    if (!constants.languageCode[languageCode as keyof typeof constants.languageCode])\n      throw new Error(\n        `Language code ${languageCode} is not supported. Please use one of these: ${Object.keys(\n          constants.languageCode,\n        ).join(\", \")}`,\n      );\n    return new Promise((resolve, reject) => {\n      fetch(\"https://www.y2mate.com/mates/analyzeV2/ajax\", {\n        method: \"POST\",\n        headers: {\n          \"User-Agent\": this.userAgent,\n          \"x-requested-with\": \"XMLHttpRequest\",\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        },\n        body: new URLSearchParams({\n          k_query: keyword,\n          k_page: \"home\",\n          hl: languageCode,\n          q_auto: \"1\",\n        }),\n      })\n        .then((res) => {\n          if (!res.ok) return reject(new Error(`HTTP Error ${res.status}`));\n          return res.json();\n        })\n        .then((d) => {\n          const data = d as Y2MateVideoDetailRaw | Y2MateVideoSearchResultRaw | Y2MatePlaylistRaw;\n          if (data.status !== \"ok\") return reject(new Error(`${JSON.stringify(data, null, 2)}`));\n          switch (data.page) {\n            case \"detail\": {\n              return resolve(new Y2MateVideoDetail(this, data as Y2MateVideoDetailRaw));\n            }\n            case \"search\": {\n              return resolve(new Y2MateSearchResult(this, data as Y2MateVideoSearchResultRaw));\n            }\n            case \"playlist\": {\n              return resolve(new Y2MatePlaylist(this, data as Y2MatePlaylistRaw));\n            }\n            default: {\n              throw new Error(`${JSON.stringify(data, null, 2)}`);\n            }\n          }\n        })\n        .catch((err) => reject(err));\n    });\n  }\n  /**\n   * Fetch download link of a video\n   * @param {string} videoId\n   * @param {string} key\n   * @returns {Promise<Y2MateDownload>}\n   */\n  fetchDownloadLink(videoId: string, key: string): Promise<Y2MateDownload> {\n    if (typeof videoId !== \"string\") throw new Error(\"Video ID is required\");\n    if (typeof key !== \"string\") throw new Error(\"Key is required\");\n    return new Promise((resolve, reject) => {\n      fetch(\"https://www.y2mate.com/mates/convertV2/index\", {\n        method: \"POST\",\n        headers: {\n          \"User-Agent\": this.userAgent,\n          \"x-requested-with\": \"XMLHttpRequest\",\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        },\n        body: new URLSearchParams({\n          vid: videoId,\n          k: key,\n        }),\n      })\n        .then((res) => {\n          if (!res.ok) return reject(new Error(`HTTP Error ${res.status}`));\n          return res.json();\n        })\n        .then((d) => {\n          const data = d as Y2MateVideoDownloadRaw;\n          return resolve(new Y2MateDownload(data));\n        })\n        .catch((err) => reject(err));\n    });\n  }\n}\nexport default Y2MateClient;\n\nexport {\n  Y2MateVideoDetail,\n  Y2MateSearchResult,\n  Y2MateDownload,\n  Y2MateVideoDetailRaw,\n  Y2MateVideoSearchResultRaw,\n  Y2MateVideoDownloadRaw,\n  Y2MatePlaylist,\n  Y2MatePlaylistRaw,\n  Y2MateClient,\n};\n","import formatDuration from \"format-duration\";\nimport Y2MateClient from \"./index\";\n\nexport type Y2MateType = \"detail\" | \"search\" | \"playlist\";\nexport interface Y2MateVideoPartialRaw {\n  t: string;\n  v: string;\n}\n\nexport class PartialY2MateVideoDetail {\n  client!: Y2MateClient;\n  title: string;\n  videoId: string;\n  public constructor(client: Y2MateClient, data: Y2MateVideoPartialRaw) {\n    Object.defineProperty(this, \"client\", { value: client });\n    /**\n     * Title of the video\n     * @type {string}\n     */\n    this.title = data.t;\n    /**\n     * Video ID\n     * @type {string}\n     */\n    this.videoId = data.v;\n  }\n  /**\n   * Fetch the detail of the video\n   * @returns {Promise<Y2MateVideoDetail>}\n   */\n  fetch(): Promise<Y2MateVideoDetail> {\n    return this.client.getFromURL(`https://www.youtube.com/watch?v=${this.videoId}`) as Promise<Y2MateVideoDetail>;\n  }\n  /**\n   * Thumbnail URL of the video\n   * @type {string}\n   */\n  get thumbnail() {\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\n  }\n}\n\nexport interface Y2MateVideoDetailRaw {\n  status: string;\n  mess: string;\n  page: Y2MateType;\n  vid: string;\n  extractor: string;\n  title: string;\n  t: number;\n  a: string;\n  links: {\n    mp3: { [key: string]: Y2MateVideoDownloadLinkRaw };\n    mp4: { [key: string]: Y2MateVideoDownloadLinkRaw };\n    other: { [key: string]: Y2MateVideoDownloadLinkRaw };\n  };\n  related: [{ title: string; contents: Y2MateVideoPartialRaw[] }];\n}\n\nexport class Y2MateVideoDetail {\n  client!: Y2MateClient;\n  status: string;\n  message: string;\n  page: Y2MateType;\n  videoId: string;\n  extractor: string;\n  title: string;\n  timestamp: number;\n  author: string;\n  linksVideo: Map<string, Y2MateDownloadLink>;\n  linksAudio: Map<string, Y2MateDownloadLink>;\n  related: Array<PartialY2MateVideoDetail>;\n  public constructor(client: Y2MateClient, data: Y2MateVideoDetailRaw) {\n    Object.defineProperty(this, \"client\", { value: client });\n    /**\n     * Status of the request\n     * @type {string}\n     */\n    this.status = data.status;\n    /**\n     * Message of the request\n     * @type {string}\n     */\n    this.message = data.mess;\n    /**\n     * Page of the request (detail, search, playlist)\n     * @type {string}\n     */\n    this.page = data.page;\n    /**\n     * Video ID\n     * @type {string}\n     */\n    this.videoId = data.vid;\n    /**\n     * Extractor (youtube)\n     * @type {string}\n     */\n    this.extractor = data.extractor;\n    /**\n     * Title of the video\n     * @type {string}\n     */\n    this.title = data.title;\n    /**\n     * Duration of the video in milliseconds\n     * @type {number}\n     */\n    this.timestamp = data.t * 1000;\n    /**\n     * Author of the video\n     * @type {string}\n     */\n    this.author = data.a;\n    /**\n     * Download links (video)\n     * @type {Map<string, Y2MateDownloadLink>}\n     */\n    this.linksVideo = new Map();\n    /**\n     * Download links (audio)\n     * @type {Map<string, Y2MateDownloadLink>}\n     */\n    this.linksAudio = new Map();\n    /**\n     * Related videos\n     * @type {Array<PartialY2MateVideoDetail>}\n     */\n    this.related = data.related[0].contents.map((o) => new PartialY2MateVideoDetail(this.client, o));\n    this._setupLinks(data.links);\n  }\n  _setupLinks(links: Y2MateVideoDetailRaw[\"links\"]) {\n    if (!links) return;\n    const video = links.mp4;\n    const audio = links.mp3;\n    for (const [key, value] of Object.entries(video)) {\n      this.linksVideo.set(key, new Y2MateDownloadLink(this.client, this.videoId, value));\n    }\n    for (const [key, value] of Object.entries(audio)) {\n      this.linksAudio.set(key, new Y2MateDownloadLink(this.client, this.videoId, value));\n    }\n  }\n  /**\n   * Formatted duration string (hh:mm:ss, mm:ss).\n   * @type {string}\n   */\n  get formattedDuration() {\n    return formatDuration(this.timestamp);\n  }\n  /**\n   * Thumbnail URL of the video\n   * @type {string}\n   */\n  get thumbnail() {\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\n  }\n}\n\nexport interface Y2MateVideoDownloadLinkRaw {\n  size: string;\n  f: string;\n  q: string;\n  q_text: string;\n  k: string;\n}\n\nexport class Y2MateDownloadLink {\n  client!: Y2MateClient;\n  size: string;\n  format: string;\n  quality: string;\n  name: string;\n  videoId: string;\n  private key: string;\n  public constructor(client: Y2MateClient, id: string, data: Y2MateVideoDownloadLinkRaw) {\n    Object.defineProperty(this, \"client\", { value: client });\n    /**\n     * Size of the video\n     * @type {string}\n     */\n    this.size = data.size;\n    /**\n     * Format of the video\n     * @type {string}\n     */\n    this.format = data.f;\n    /**\n     * Quality of the video\n     * @type {string}\n     */\n    this.quality = data.q;\n    /**\n     * Name of the quality\n     * @type {string}\n     */\n    this.name = data.q_text;\n    /**\n     * Video ID\n     * @type {string}\n     */\n    this.videoId = id;\n    /**\n     * Key of the video (used to fetch download link)\n     * @type {string}\n     * @private\n     */\n    this.key = data.k;\n  }\n  /**\n   * Fetch the download link of the video\n   * @returns {Promise<Y2MateDownload>}\n   */\n  fetch(): Promise<Y2MateDownload> {\n    return this.client.fetchDownloadLink(this.videoId, this.key);\n  }\n  /**\n   * Thumbnail URL of the video\n   * @type {string}\n   */\n  get thumbnail() {\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\n  }\n}\n\nexport interface Y2MateVideoSearchResultRaw {\n  page: Y2MateType;\n  status: string;\n  keyword: string;\n  vitems: Array<Y2MateVideoPartialRaw>;\n  mess?: string;\n}\n\nexport class Y2MateSearchResult {\n  client!: Y2MateClient;\n  page: Y2MateType;\n  status: string;\n  keyword: string;\n  results: Array<PartialY2MateVideoDetail>;\n  constructor(client: Y2MateClient, data: Y2MateVideoSearchResultRaw) {\n    Object.defineProperty(this, \"client\", { value: client });\n    /**\n     * Page of the request (detail, search, playlist)\n     * @type {string}\n     */\n    this.page = data.page;\n    /**\n     * Status of the request\n     * @type {string}\n     */\n    this.status = data.status;\n    /**\n     * Keyword of the search\n     * @type {string}\n     */\n    this.keyword = data.keyword;\n    /**\n     * Results of the search\n     * @type {Array<PartialY2MateVideoDetail>}\n     */\n    this.results = data.vitems.map((o) => new PartialY2MateVideoDetail(client, o));\n  }\n}\n\nexport interface Y2MateVideoDownloadRaw {\n  status: string;\n  mess: string;\n  c_status: string;\n  vid: string;\n  title: string;\n  ftype: string;\n  fquality: string;\n  dlink: string;\n}\n\nexport class Y2MateDownload {\n  status: string;\n  message: string;\n  conversionStatus: string;\n  videoId: string;\n  title: string;\n  fileType: string;\n  fileQuality: string;\n  downloadLink: string;\n  constructor(data: Y2MateVideoDownloadRaw) {\n    /**\n     * Status of the request\n     * @type {string}\n     */\n    this.status = data.status;\n    /**\n     * Message of the request\n     * @type {string}\n     */\n    this.message = data.mess;\n    /**\n     * Conversion status of the request\n     * @type {string}\n     */\n    this.conversionStatus = data.c_status;\n    /**\n     * Video ID\n     * @type {string}\n     */\n    this.videoId = data.vid;\n    /**\n     * Title of the video\n     * @type {string}\n     */\n    this.title = data.title;\n    /**\n     * File type (mp4, mp3, etc.)\n     * @type {string}\n     */\n    this.fileType = data.ftype;\n    /**\n     * File quality (1080, 720, etc.)\n     * @type {string}\n     */\n    this.fileQuality = data.fquality;\n    /**\n     * Download link\n     * @type {string}\n     */\n    this.downloadLink = data.dlink;\n  }\n  /**\n   * Thumbnail URL of the video\n   * @type {string}\n   */\n  get thumbnail() {\n    return `https://i.ytimg.com/vi/${this.videoId}/0.jpg`;\n  }\n}\n\nexport interface Y2MatePlaylistRaw {\n  status: string;\n  mess: string;\n  vitems: Array<Y2MateVideoPartialRaw>;\n  keyword: string;\n  title: string;\n  thumbnail: string;\n  page: Y2MateType;\n  playlistId: string;\n}\n\nexport class Y2MatePlaylist {\n  client!: Y2MateClient;\n  status: string;\n  message: string;\n  videos: Array<PartialY2MateVideoDetail>;\n  keyword: string;\n  title: string;\n  thumbnail: string;\n  page: Y2MateType;\n  playlistId: string;\n  constructor(client: Y2MateClient, data: Y2MatePlaylistRaw) {\n    Object.defineProperty(this, \"client\", { value: client });\n    /**\n     * Status of the request\n     * @type {string}\n     */\n    this.status = data.status;\n    /**\n     * Message of the request\n     * @type {string}\n     */\n    this.message = data.mess;\n    /**\n     * Videos of the playlist\n     * @type {Array<PartialY2MateVideoDetail>}\n     */\n    this.videos = data.vitems.map((o) => new PartialY2MateVideoDetail(client, o));\n    /**\n     * Keyword of the search\n     * @type {string}\n     */\n    this.keyword = data.keyword;\n    /**\n     * Title of the playlist\n     * @type {string}\n     */\n    this.title = data.title;\n    /**\n     * Thumbnail of the playlist\n     * @type {string}\n     */\n    this.thumbnail = data.thumbnail;\n    /**\n     * Page of the request (detail, search, playlist)\n     * @type {string}\n     */\n    this.page = data.page;\n    /**\n     * Playlist ID\n     * @type {string}\n     */\n    this.playlistId = data.playlistId;\n  }\n}"],"mappings":"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","names":[]}